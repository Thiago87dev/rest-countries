'use client'
import { useState } from "react";

export default function Home() {
  // Dados fixos dos países
  const countries = [
    { name: "Brazil", continent: "South America", capital: "Brasilia" },
    { name: "Canada", continent: "North America", capital: "Ottawa" },
    { name: "Germany", continent: "Europe", capital: "Berlin" },
    { name: "Japan", continent: "Asia", capital: "Tokyo" },
    { name: "India", continent: "Asia", capital: "New Delhi" },
    { name: "France", continent: "Europe", capital: "Paris" },
    { name: "Mexico", continent: "North America", capital: "Mexico City" },
    { name: "Italy", continent: "Europe", capital: "Rome" },
    { name: "China", continent: "Asia", capital: "Beijing" },
    { name: "Australia", continent: "Oceania", capital: "Canberra" },
    { name: "Croacia", continent: "Europa", capital: "Esqueci" },
    { name: "Colombia", continent: "America do sul", capital: "Esqueci" },
  ];

  const [searchTerm, setSearchTerm] = useState(""); // Termo da busca
  const [currentPage, setCurrentPage] = useState(1); // Página atual
  const itemsPerPage = 5; // Itens por página

  // Filtrar os países pelo termo da busca
  const filteredCountries = countries.filter((country) =>
    country.name.toLowerCase().includes(searchTerm.toLowerCase())
  ); // Se searchTerm for vazio, a lista filteredCountries terá todos os paises.

  // Paginação
  const totalPages = Math.ceil(filteredCountries.length / itemsPerPage);
  const startIndex = (currentPage - 1) * itemsPerPage;
  const currentCountries = filteredCountries.slice(
    startIndex,
    startIndex + itemsPerPage
  );

  return (
    <div className="min-h-screen bg-gray-100 flex flex-col items-center p-4">
      {/* Barra de busca */}
      <input
        type="text"
        placeholder="Buscar por país..."
        value={searchTerm}
        onChange={(e) => {
          setSearchTerm(e.target.value);
          setCurrentPage(1); // Resetar para a primeira página ao buscar
        }}
        className="mb-4 p-2 border border-gray-300 rounded w-64 focus:outline-none focus:ring focus:ring-blue-300"
      />

      {/* Lista de países */}
      <div className="bg-white p-4 rounded shadow-md w-full max-w-lg">
        {currentCountries.length === 0 ? (
          <p className="text-gray-500 text-center">Nenhum país encontrado.</p>
        ) : (
          <ul>
            {currentCountries.map((country, index) => (
              <li
                key={index}
                className="p-2 border-b border-gray-200 last:border-b-0"
              >
                <p className="font-semibold">{country.name}</p>
                <p className="text-sm text-gray-500">
                  {country.capital} - {country.continent}
                </p>
              </li>
            ))}
          </ul>
        )}
      </div>

      {/* Paginação */}
      {totalPages > 1 && (
        <div className="flex space-x-2 mt-4">
          {Array.from({ length: totalPages }, (_, index) => (
            <button
              key={index}
              onClick={() => setCurrentPage(index + 1)}
              className={`px-3 py-1 rounded ${
                currentPage === index + 1
                  ? "bg-blue-500 text-white"
                  : "bg-gray-200 text-gray-700"
              }`}
            >
              {index + 1}
            </button>
          ))}
        </div>
      )}
    </div>
  );
}
